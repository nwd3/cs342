--Guide 9
1.
	a.
		i."In a B-tree, every value of the search field appears once at
some level in the tree, along with a data pointer. In a B+-tree, data pointers are stored
only at the leaf nodes of the tree; hence, the structure of leaf nodes differs from the
structure of internal nodes"
		ii."all of its leaf
nodes are at the same level"
		
		iii."tree pointer—a pointer to another node in the
B-tree. Each Pri is a data pointer10—a pointer to the record whose search
key field value is equal to Ki (or to the data file block containing that record)."

	b. multiple attributes are attributes that are not key attributes which means a search will
	have multiple records(from book)
	
	c.hash index is a secondary structure to access the file by using hashing
on a search key other than the one used for the primary data file organization.
The bitmap index is another popular data structure that facilitates querying on
multiple keys. Bitmap indexing is used for relations that contain a large number of
rows. It creates an index for one or more columns, and each value or value range in
those columns is indexed.

	d.
		i.-"goal is not only to create the apporpriate sructuring of data in storage but also to do
	so in a way that guarantees good performance.
		
		ii.use B tree for indexing hashing works well with equality conditions
		bitmapping indesing is particulary applicable on fields with a small number of 
		unique values.
		
		iii.
		Denormalization was not even in chapter 17 but I would say that it should be part of a 
		pdd to determine what is allowed and what is not.
		
	2."a query has many possible execution strategies and the process of choosing a suitable one for
	processing a query is known as query optimization."
	
	3.
	a. The execution plan tells the time, the cput cost and how the table will be accessed.
	
	b."TABLE ACCESS FULL
This is also known as full table scan. Reads the entire table—all rows and 
columns—as stored on the disk. Although multi-block read operations improve the
 speed of a full table scan considerably, it is still one of the most expensive operations.
 Besides high IO rates, a full table scan must inspect all table rows so it can also consume
 a considerable amount of CPU time. See also “Full Table Scan”."
 
 TABLE ACCESS BY INDEX ROWID
"Retrieves a row from the table using the ROWID retrieved from the preceding index lookup. 
See also Chapter 1, “Anatomy of an SQL Index”."

"Nested Loops
The nested loops join is the most fundamental join algorithm. It works like using two nested
 queries: the outer or driving query to fetch the results from one table and a second 
query for each row from the driving query to fetch the corresponding data from the other table."

"HASH JOIN
The hash join loads the candidate records from one side of the join into a hash table that 
is then probed for each row from the other side of the join. See also “Hash Join”."

"INDEX UNIQUE SCAN
The INDEX UNIQUE SCAN performs the B-tree traversal only. The database uses this operation 
if a unique constraint ensures that the search criteria will match no more than one entry.
 See also Chapter 1, “Anatomy of an SQL Index”."