Exercise 12.1
1.In guide 12 we established a local connection this time we are using the remote connection and letting glassfish do the work.  Further we are explicitly using the oracle pool where as in guide 12 we did not do any of this.
I would say we don't necessarily need both but it may depend on the situation in which we are using the application, how we are querying the oracle database, and in what context we are using the interface in.

Exercise 12.2
1.It creates a class for each table in the database.  The class has methods which access and set the different relationships between the tables as well as maintain all the necessary constraints.  

2.The pk class is the"name of the primary key column for classes that use datastore identity. 
This property is not used for classes with application identity."
It makes sure that database integrity is enforced.
ref1

3.We use property access we need to create a gettter and setter for each access.
ref2:
ref3

Exercise 12.3
1."In computer science, marshalling or marshaling is the process of transforming the memory
 representation of an object to a data format suitable for storage or transmission, and it 
 is typically used when data must be moved between different parts of a computer program or
 from one program to another."ref4
  So yes we are doing marshaling in this application because we are transforming the data in the oracle
  table into the java classes and we are able to transmit the data from these classes.
  
2.We "use dependency injection to access to a container-managed EntityManger"(guide) to maintain our person entities.
Yes this code uses injection by using the @override in MyApplication.java and returns the application
ref5
3.The entity manager creates the entities in our code.  For example it creates the person class with all the properties that the person has.  The entity manager resides in glassfish and maintains these records.

Exercise 12.4
1.Json gives the identifier that was declared in the person class brackets and then infromation about that 
specific household or team etc 
For example this is part of a the output for person 2 
the household part:
","personsById":{"city":"Grand Rapids","id":0,"phonenumber":"616-243-5680","state":"MI","street":"2347 Oxford Dr. SE","zipcode":"49506"},"


References:
ref1: above:https://docs.oracle.com/cd/E13189_01/kodo/docs341/ref_guide_mapping_classmapping.html
ref2:http://stackoverflow.com/questions/594597/hibernate-annotations-which-is-better-field-or-property-access
ref3https://intellij-support.jetbrains.com/hc/en-us/community/posts/206854265-Intellij-13-Generate-Persistence-Mapping-JPA-Annotations-No-options-to-specify-property-based-or-field-based
ref4:https://en.wikipedia.org/wiki/Marshalling_(computer_science)
ref5:http://www.journaldev.com/2394/java-dependency-injection-design-pattern-example-tutorial
